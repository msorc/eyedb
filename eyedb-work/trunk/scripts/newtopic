#!/bin/bash

usage() {
    echo "Usage: `basename $0` {<topic>}"
}

full_date() {
    date "+%Y-%m-%d %H:%M"
}

backup_file_aux() {
    if [ $2 -ge 2 ] ; then return 0; fi
    if [ -f $1.backup ] ; then backup_file_aux $1.backup `expr $2 + 1` ; fi
    [ -f $1 ] && cp $1 $1.backup
}

backup_file() {
    backup_file_aux $1 0
}

user_full_name() {
    awk < /etc/passwd -F : 'BEGIN { id = '`id --real -u`' } $3 == id {gsub(",","",$5); print $5;}'
}

make_topic_directory() {
    if [ -d $TOPIC_DIR ] ; then return 0; fi
    mkdir -p $TOPIC_DIR #; echo "Created directory $TOPIC_DIR"
    mkdir $TOPIC_DIR/doc 
    return 1
}

generate_topic_makefile_am() {
    FILE=$TOPIC_DIR/Makefile.am
    backup_file $FILE
    sed -e "s'@TOPIC@'$TOPIC'g" < $TOPDIR/scripts/template/Makefile.am > $FILE
#    echo "Generated $FILE"
}

generate_topic_changelog() {
    FILE=$TOPIC_DIR/ChangeLog
    backup_file $FILE
    ( \
	echo `full_date` `user_full_name`
	echo
	echo -e '\t* Added topic '$TOPIC
	echo ) > $FILE
#    echo "Generated $FILE"
}

update_makefile_am() {
    FILE=$TOPDIR/$TOPICROOT/Makefile.am
    backup_file $FILE
    awk '
BEGIN { topic = "'$TOPIC'"; a[topic] = topic; }
/SUBDIRS=/ { }
!/SUBDIRS=/ && NF > 0 { gsub("\\","",$1); a[$1] = $1; }
END { print "SUBDIRS=\\"; n = asort(a); for (i = 1; i < n; i++) print( a[i]" \\"); print( a[n]); }
' $FILE > $FILE.out
    mv $FILE.out $FILE
#    echo "Updated $FILE"
}

update_configure_in() {
    FILE=$TOPDIR/configure.in
    backup_file $FILE
    awk '
BEGIN {topic = "'$TOPIC'";  in_ac_output = 0; s = "'$TOPICROOT'/" topic "/Makefile"; a[s] = s; }
in_ac_output == 0 && ! ($1 ~ /AC_OUTPUT/) { print; }
in_ac_output == 0 && $1 ~ /AC_OUTPUT/ { print; in_ac_output = 1; }
in_ac_output == 1 && ! ($1 ~ /)/) && ! ($1 ~ /AC_OUTPUT/) && NF > 0 { a[$1] = $1; }
in_ac_output == 1 && $1 ~ /)/ { 
   n = asort(a); for (i = 1; i <= n; i++) print( a[i]);
   print( ")");
   in_ac_output = 0;
}
' $FILE > $FILE.out
    mv $FILE.out $FILE
#    echo "Updated $FILE"
}

update_changelog() {
    FILE=$TOPDIR/ChangeLog
    touch $FILE
    backup_file $FILE 
    DATE=`full_date`
    ed $FILE > /dev/null 2>&1 <<EOF
1i
$DATE `user_full_name`

	* Added topic $TOPIC

.
w
q
EOF
#    echo "Updated $FILE"
}

if [ $# -eq 0 ] ; then usage $*; exit 2; fi

TOPDIR=`dirname $0`/..
TOPDIR=`(cd $TOPDIR; pwd)`
TOPICROOT=src

for topic in $*
do
  TOPIC=$topic
  TOPIC_DIR=$TOPDIR/$TOPICROOT/$topic

  if make_topic_directory 
  then
    echo "Topic $topic already exists"
    continue
  fi

  echo "Generating topic $topic"

  generate_topic_makefile_am 
  generate_topic_changelog 
  update_makefile_am 
  update_configure_in 
  update_changelog 
done
