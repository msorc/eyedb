# 
# configure.in for -benchmarks
# 

AC_INIT(src/java/org/eyedb/benchmark/framework/StopWatch.java)

PACKAGE_NAME=eyedb-benchmarks
PACKAGE_VERSION=1.0.0

AM_INIT_AUTOMAKE(${PACKAGE_NAME}, ${PACKAGE_VERSION})

# ========================================
# Collect command line arguments
# ========================================
# C++
AC_ARG_ENABLE(cpp,
		AS_HELP_STRING([--enable-cpp],
				[enable C++ code compilation [default=yes]]),,
		ac_enable_cpp="yes")
# Debug
AC_ARG_ENABLE(debug,
		AS_HELP_STRING([--enable-debug],
				[compile with debug [default=no]]),,
		enable_debug="no")
# Profile
AC_ARG_ENABLE(profile,
		AS_HELP_STRING([--enable-profile],
				[compile with profile [default=no]]),,
		enable_profile="no")
# Java
AC_ARG_ENABLE(java,
		AS_HELP_STRING([--enable-java],
				[enable java code compilation [default=yes]]),,
		ac_enable_java="yes")
# EyeDB
AC_ARG_ENABLE(eyedb,
		AS_HELP_STRING([--enable-eyedb],
				[enable EyeDB code compilation [default=yes]]),,
		ac_enable_eyedb="yes")
# Db4o
AC_ARG_ENABLE(db4o,
		AS_HELP_STRING([--enable-db4o],
				[enable db4o code compilation [default=yes]]),,
		ac_enable_db4o="yes")
# hibernate
AC_ARG_ENABLE(hibernate,
		AS_HELP_STRING([--enable-hibernate],
				[enable hibernate code compilation [default=yes]]),,
		ac_enable_hibernate="yes")
# Poleposition
AC_ARG_ENABLE(polepos,
		AS_HELP_STRING([--enable-polepos],
				[enable polepos code compilation [default=yes]]),,
		ac_enable_polepos="yes")
# OpenOffice
AC_ARG_ENABLE(openoffice,
		AS_HELP_STRING([--enable-openoffice],
				[enable compilation of openoffice result reporting code [default=no]]),,
		ac_enable_openoffice="no")


# ========================================
# C++ compilation
# ========================================
if test "$ac_enable_cpp" = "yes"; then
   AC_PROG_CXX
   AC_PROG_LIBTOOL
fi

if test "$ac_enable_cpp" = "yes" -a x"$CXX" != x ; then
   COND_CPP="yes"
   
   if test "$enable_debug" = "yes"
   then
	CXXFLAGS="$CXXFLAGS -g"
   fi
   if test "x$enable_profile" != "x"
   then
	CXXFLAGS="$CXXFLAGS -pg"
   fi
fi
AM_CONDITIONAL(COND_CPP, test x"$COND_CPP" = xyes)

# ========================================
# JAVA compilation
# ========================================
if test "$ac_enable_java" = "yes"; then
   AC_PROG_JAVAC
   export CLASSPATH=.
   AC_PROG_JAVA
   AC_PATH_PROG(JAR, jar)
fi

if test "$ac_enable_java" = "yes" -a x"$JAVAC" != x -a x"$JAR" != x ; then
   COND_JAVA="yes"

   if test "$enable_debug" = "yes"
   then
	JAVACFLAGS="$JAVACFLAGS -g"
   fi
fi

AM_CONDITIONAL(COND_JAVA, test x"$COND_JAVA" = xyes)

AC_SUBST(JAVACFLAGS)

# ========================================
# Settings for packages
# ========================================

# ========================================
# EyeDB
# ========================================
AC_ARG_VAR(EYEDB_INSTALLDIR,[EyeDB installation directory])
EYEDB_INSTALLDIR_DEFAULTS="/usr $HOME/projects/eyedb/install $HOME/eyedb-install $HOME/eyedb_install"

if test "$ac_enable_eyedb" = "yes"; then
   if test x"$EYEDB_INSTALLDIR" = x ; then
      AC_MSG_CHECKING(for EyeDB installation directory)
      EYEDB_INSTALLDIR="none"
      for d in $EYEDB_INSTALLDIR_DEFAULTS; do
      	  if test -f $d/lib/eyedb/java/eyedb.jar ; then
	     EYEDB_INSTALLDIR=$d
	     break
	  fi
      done
      if test x"$EYEDB_INSTALLDIR" = x"none" ; then
      	 AC_MSG_ERROR(no EyeDB installation found)
      fi
      AC_MSG_RESULT($EYEDB_INSTALLDIR)
   fi
   EYEDB_BINDIR=$EYEDB_INSTALLDIR/bin
   EYEDB_SBINDIR=$EYEDB_INSTALLDIR/sbin
   EYEDB_INCLUDEDIR=$EYEDB_INSTALLDIR/include
   EYEDB_LIBDIR=$EYEDB_INSTALLDIR/lib

   EYEDB_JAR=${EYEDB_INSTALLDIR}/lib/eyedb/java/eyedb.jar
   AC_CHECK_FILE($EYEDB_JAR,HAVE_EYEDB_JAR="yes",HAVE_EYEDB_JAR="no")
fi

if test "$ac_enable_eyedb" = "yes" -a "$HAVE_EYEDB_JAR" = "yes" ; then
   COND_EYEDB="yes"
fi
AM_CONDITIONAL(COND_EYEDB, test x"$COND_EYEDB" = xyes)

AC_SUBST(EYEDB_BINDIR)
AC_SUBST(EYEDB_SBINDIR)
AC_SUBST(EYEDB_INCLUDEDIR)
AC_SUBST(EYEDB_LIBDIR)
AC_SUBST(EYEDB_JAR)

# ========================================
# db4o
# ========================================

AC_ARG_VAR(DB4O_JAR,[DB4O jar file])

# To be changed if DB4O version changes
DB4O_JAR_DEFAULT=dependencies/db4o/db4o-7.2/lib/db4o-7.2.54.11278-java5.jar

if test "$ac_enable_db4o" = "yes" ; then
   if test x"$DB4O_JAR" = x ; then
	DB4O_JAR='${abs_top_srcdir}'/$DB4O_JAR_DEFAULT
	HAVE_DB4O_JAR="yes"
   else
	AC_CHECK_FILE($DB4O_JAR,HAVE_DB4O_JAR="yes",HAVE_DB4O_JAR="no")
   fi
fi
if test "$ac_enable_db4o" = "yes" -a "$HAVE_DB4O_JAR" = "yes" ; then
   COND_DB4O="yes"
fi
AM_CONDITIONAL(COND_DB4O, test x"$COND_DB4O" = xyes)

AC_SUBST(DB4O_JAR)


# ========================================
# hibernate
# ========================================

AC_ARG_VAR(HIBERNATE_JAR,[Hibernate jar file])
AC_ARG_VAR(JDBC_CONNECTOR_JAR,[JDBC connector jar file])
AC_ARG_VAR(SLF4J_CONNECTOR_JAR,[SLF4J jar file])
AC_ARG_VAR(LOG4J_DIR,[Log4Java jar directory])
AC_ARG_VAR(HIBERNATE_LIBDIR,[Hibernate libraries directory])

# To be changed if Hibernate or JDBC version changes
HIBERNATE_JAR_DEFAULT=dependencies/hibernate/hibernate-distribution-3.3.0.SP1/hibernate3.jar
JDBC_CONNECTOR_JAR_DEFAULT=dependencies/jdbc/mysql-connector-java-5.1.6/mysql-connector-java-5.1.6-bin.jar
SLF4J_JAR_DEFAULT=dependencies/slf4j/slf4j-1.5.2/slf4j-simple-1.5.2.jar
LOG4J_DIR_DEFAULT=dependencies/log4j
HIBERNATE_LIBDIR_DEFAULT=dependencies/hibernate/hibernate-distribution-3.3.0.SP1/lib

if test "$ac_enable_hibernate" = "yes" ; then

   if test x"$HIBERNATE_JAR" = x ; then
	HIBERNATE_JAR='${abs_top_srcdir}'/$HIBERNATE_JAR_DEFAULT
	HAVE_HIBERNATE_JAR="yes"
   else
	AC_CHECK_FILE($HIBERNATE_JAR,HAVE_HIBERNATE_JAR="yes",HAVE_HIBERNATE_JAR="no")
   fi

   if test x"$JDBC_CONNECTOR_JAR" = x ; then
	JDBC_CONNECTOR_JAR='${abs_top_srcdir}'/$JDBC_CONNECTOR_JAR_DEFAULT
	HAVE_JDBC_CONNECTOR_JAR="yes"
   else
	AC_CHECK_FILE($JDBC_CONNECTOR_JAR,HAVE_JDBC_CONNECTOR_JAR="yes",HAVE_JDBC_CONNECTOR_JAR="no")
   fi

   if test x"$SLF4J_JAR" = x ; then
	SLF4J_JAR='${abs_top_srcdir}'/$SLF4J_JAR_DEFAULT
	HAVE_SLF4J_JAR="yes"
   else
	AC_CHECK_FILE($SLF4J_JAR,HAVE_SLF4J_JAR="yes",HAVE_SLF4J_JAR="no")
   fi

   HIBERNATE_CLASSPATH=""
   if test x"$HIBERNATE_LIBDIR" = x ; then
	HIBERNATE_LIBDIR=$HIBERNATE_LIBDIR_DEFAULT
	for j in `find "${srcdir}/$HIBERNATE_LIBDIR" -name '*.jar'` ; do 
	    j=`echo $j | sed -e "s+^${srcdir}/++"`
       	    HIBERNATE_CLASSPATH='${abs_top_srcdir}'/$j:$HIBERNATE_CLASSPATH
	done
   else
	for j in `find "$HIBERNATE_LIBDIR" -name '*.jar'` ; do 
       	    HIBERNATE_CLASSPATH="$j:$HIBERNATE_CLASSPATH"
	done
   fi
   if test x"$LOG4J_DIR" = x ; then
	for j in `find "${srcdir}/$LOG4J_DIR_DEFAULT" -name '*.jar'` ; do
	    j=`echo $j | sed -e "s+^${srcdir}/++"`
       	    HIBERNATE_CLASSPATH='${abs_top_srcdir}'/$j:$HIBERNATE_CLASSPATH
	done
   else
	for j in `find "$LOG4J_DIR" -name '*.jar'` ; do 
       	    HIBERNATE_CLASSPATH="$j:$HIBERNATE_CLASSPATH"
	done
   fi

   HIBERNATE_CLASSPATH="$HIBERNATE_CLASSPATH:$JDBC_CONNECTOR_JAR:$SLF4J_JAR"

fi

if test "$ac_enable_hibernate" = "yes" -a "$HAVE_HIBERNATE_JAR" = "yes" -a "$HAVE_JDBC_CONNECTOR_JAR" = "yes" ; then
   COND_HIBERNATE="yes"
fi
AM_CONDITIONAL(COND_HIBERNATE, test x"$COND_HIBERNATE" = xyes)

AC_SUBST(HIBERNATE_JAR)
AC_SUBST(HIBERNATE_CLASSPATH)


# ========================================
# Poleposition benchmarks
# ========================================

AC_ARG_VAR(POLEPOS_DIR,[Poleposition benchmarks source directory])

# To be changed if Poleposition version changes
POLEPOS_DIR_DEFAULT=dependencies/poleposition/src/polepos-oct-27-2008

if test "$ac_enable_polepos" = "yes" ; then
   if test x"$POLEPOS_DIR" = x ; then
	POLEPOS_DIR='${abs_top_srcdir}'/$POLEPOS_DIR_DEFAULT
	HAVE_POLEPOS="yes"
   else
	AC_CHECK_FILE($POLEPOS_DIR,HAVE_POLEPOS="yes",HAVE_POLEPOS="no")
   fi
   AC_CHECK_PROGS(ANT,ant)
fi
if test "$ac_enable_polepos" = "yes" -a "$HAVE_POLEPOS" = "yes" -a x"$ANT" != x ; then
   COND_POLEPOS="yes"
fi
AM_CONDITIONAL(COND_POLEPOS, test x"$COND_POLEPOS" = xyes)

AC_SUBST(POLEPOS_DIR)


# ========================================
# OpenOffice result reporting
# ========================================

AC_ARG_VAR(OPENOFFICEJAVA_DIR,[OpenOffice java directory])

OPENOFFICEJAVA_DIR_DEFAULTS="/usr/lib/openoffice/program/classes "

if test "$ac_enable_openoffice" = "yes" ; then
   if test x"$OPENOFFICEJAVA_DIR" = x ; then
      AC_MSG_CHECKING(for OpenOffice java directory)
      OPENOFFICEJAVA_DIR="none"
      for d in $OPENOFFICEJAVA_DIR_DEFAULTS; do
      	  if test -f $d/juh.jar ; then
	     OPENOFFICEJAVA_DIR=$d
	     break
	  fi
      done
      AC_MSG_RESULT($OPENOFFICEJAVA_DIR)
   fi

   if test x"$OPENOFFICEJAVA_DIR" != x"none" ; then
      AC_CHECK_FILE( $OPENOFFICEJAVA_DIR/juh.jar, HAVE_OPENOFFICEJAVA="yes", HAVE_OPENOFFICEJAVA="no")

         OPENOFFICE_CLASSPATH=""
	 if test "$HAVE_OPENOFFICEJAVA" = "yes"; then
	    for j in juh.jar jurt.jar unoil.jar unoloader.jar ; do
	    	OPENOFFICE_CLASSPATH="$OPENOFFICE_CLASSPATH:$OPENOFFICEJAVA_DIR/$j"
	   done
	 fi
   fi
fi

if test "$ac_enable_openoffice" = "yes" -a "$HAVE_OPENOFFICEJAVA" = "yes" ; then
   COND_OPENOFFICE="yes"
fi
AM_CONDITIONAL(COND_OPENOFFICE, test x"$COND_OPENOFFICE" = xyes)

AC_SUBST(OPENOFFICEJAVA_DIR)
AC_SUBST(OPENOFFICE_CLASSPATH)


# ========================================
# Generate output files
# ========================================
AC_CONFIG_LINKS( ${srcdir}/src/cpp/polepos/eyedb/polepos.odl:src/java/org/eyedb/benchmark/polepos/teams/eyedb/data/data.odl )
AC_CONFIG_LINKS( ${srcdir}/src/cpp/quicktour/eyedb/quicktour.odl:src/java/org/eyedb/benchmark/quicktour/eyedb/quicktour.odl )

AC_CONFIG_FILES(
Makefile dnl
dependencies/Makefile dnl
dependencies/poleposition/Makefile dnl
run/Makefile dnl
run/polepos/Makefile dnl
run/polepos/cpp/Makefile dnl
run/polepos/cpp/eyedb/Makefile dnl
run/polepos/java/Makefile dnl
run/polepos/java/db4o/Makefile dnl
run/polepos/java/eyedb/Makefile dnl
run/polepos/java/hibernate/Makefile dnl
run/quicktour/Makefile dnl
run/quicktour/cpp/Makefile dnl
run/quicktour/cpp/eyedb/Makefile dnl
run/quicktour/java/Makefile dnl
run/quicktour/java/dummy/Makefile dnl
run/quicktour/java/db4o/Makefile dnl
run/quicktour/java/eyedb/Makefile dnl
run/quicktour/java/hibernate/Makefile dnl
run/utils/common/functions dnl
run/utils/db4o/functions dnl
run/utils/eyedb/functions dnl
run/utils/hibernate/functions dnl
run/utils/polepos/functions dnl
src/Makefile dnl
src/cpp/Makefile dnl
src/cpp/framework/Makefile dnl
src/cpp/polepos/Makefile dnl
src/cpp/polepos/eyedb/Makefile dnl
src/cpp/quicktour/Makefile dnl
src/cpp/quicktour/eyedb/Makefile dnl
src/java/Makefile dnl
src/java/org/Makefile dnl
src/java/org/eyedb/Makefile dnl
src/java/org/eyedb/benchmark/Makefile dnl
src/java/org/eyedb/benchmark/framework/Makefile dnl
src/java/org/eyedb/benchmark/framework/reporter/Makefile dnl
src/java/org/eyedb/benchmark/framework/reporter/openoffice/Makefile dnl
src/java/org/eyedb/benchmark/framework/reporter/simple/Makefile dnl
src/java/org/eyedb/benchmark/framework/reporter/csv/Makefile dnl
src/java/org/eyedb/benchmark/polepos/Makefile dnl
src/java/org/eyedb/benchmark/polepos/teams/Makefile dnl
src/java/org/eyedb/benchmark/polepos/teams/db4o/Makefile dnl
src/java/org/eyedb/benchmark/polepos/teams/eyedb/Makefile dnl
src/java/org/eyedb/benchmark/polepos/teams/eyedb/data/Makefile dnl
src/java/org/eyedb/benchmark/quicktour/Makefile dnl
src/java/org/eyedb/benchmark/quicktour/dummy/Makefile dnl
src/java/org/eyedb/benchmark/quicktour/db4o/Makefile dnl
src/java/org/eyedb/benchmark/quicktour/eyedb/Makefile dnl
src/java/org/eyedb/benchmark/quicktour/eyedb/array/Makefile dnl
src/java/org/eyedb/benchmark/quicktour/eyedb/collection/Makefile dnl
src/java/org/eyedb/benchmark/quicktour/eyedb/inverse/Makefile dnl
src/java/org/eyedb/benchmark/quicktour/hibernate/Makefile dnl
src/java/org/eyedb/benchmark/utils/Makefile dnl
src/java/org/eyedb/benchmark/utils/db4o/Makefile dnl
src/java/bench1/Makefile dnl
src/java/bench1/eyedb/Makefile dnl
src/java/bench1/db4o/Makefile dnl
src/java/bench1/hibernate/Makefile dnl
src/java/bench2/Makefile dnl
src/java/bench2/eyedb/Makefile dnl
src/java/bench2/db4o/Makefile dnl
)
AC_OUTPUT


echo
echo
echo "  EyeDB benchmarks suite configured for '${host}'."
echo
echo "  EyeDB benchmarks will be compiled with the following options:"
echo 
echo "  *** Java benchmarks ***" 
echo "  Compile Java benchmarks: ${COND_JAVA:-no}"
echo "  Java compiler: ${JAVAC:-none}"
echo "  Java compiler flags: ${JAVACFLAGS:-none}"
echo "  Java virtual machine: ${JAVA:-none}"
echo "  Jar utility: ${JAR:-none}"
echo 
echo "  *** C++ benchmarks ***" 
echo "  Compile C++ benchmarks: ${COND_CPP:-no}"
echo "  C++ compiler: ${CXX:-none}"
echo "  C++ compiler flags: ${CXXFLAGS:-none}"
echo 
echo "  *** EyeDB ***" 
echo "  Compile EyeDB benchmarks: ${COND_EYEDB:-no}"
echo "  EyeDB installation directory: ${EYEDB_INSTALLDIR:-no}"
echo 
echo "  *** db4o ***" 
echo "  Compile db4o benchmarks: ${COND_DB4O:-no}"
dnl V=${DB4O_JAR}; while echo $V | grep '\$' > /dev/null 2>&1; do V=$(eval echo $V) ; done
echo "  db4o jar: ${DB4O_JAR:-no}"
echo 
echo "  *** Hibernate ***" 
echo "  Compile Hibernate benchmarks: ${COND_HIBERNATE:-no}"
echo "  Hibernate jar: ${HIBERNATE_JAR:-no}"
echo 
echo "  *** Poleposition ***" 
echo "  Compile Poleposition benchmarks: ${COND_POLEPOS:-no}"
echo "  Ant: ${ANT:-no}"
echo "  Poleposition directory: ${POLEPOS_DIR:-no}"
echo 
echo "  *** OpenOffice ***" 
echo "  Compile OpenOffice reporting (experimental): ${COND_OPENOFFICE:-no}"
echo "  OpenOffice java directory: ${OPENOFFICEJAVA_DIR:-no}"
echo 
echo ""
