
# Settings for all circuits in the database benchmark.

# melbourne
#
# [objects]: number of objects to be written, read and deleted
# [commitintervall]: when to perform an intermediate commit during write and delete

melbourne.objects=3000,10000,30000,100000
melbourne.commitinterval=1000,1000,1000,1000


# sepang
#
# [depth]: depth of the tree

sepang.depth=8,10,12,14


#  bahrain
#
# [objects]: number of objects to select from
# [selects]: number of queries to be run against all objects
# [updates]: number of updates to be run
# [commitinterval]: when to perform an intermediate commit during write and delete

bahrain.objects=1000,3000,10000,30000
bahrain.selects=900,900,900,900
bahrain.updates=100,100,100,100
bahrain.commitinterval=1000,1000,1000,1000


# imola
#
# [objects]: number of objects to select from
# [selects]: number of queries run against all objects
# [commitinterval]: when to perform an intermediate commit during write and delete

imola.objects=10000,30000,100000,300000
imola.selects=5000,5000,5000,5000
imola.commitinterval=1000,1000,1000,1000


# barcelona
#
# [objects]: number of objects to select from
# [selects]: number of queries run against all objects

barcelona.objects=1000,3000,10000,30000
barcelona.selects=100,100,100,100


# monaco
#
# [objects]: number of objects in the database
# [commits]: number of added objects and commits

monaco.objects=100000,300000,1000000
monaco.commits=30,30,30


# nurburgring
#
# [objects]: number of objects to be written, read and deleted
# [commitintervall]: when to perform an intermediate commit during write and delete

nurburgring.objects=3000,10000,30000,100000
nurburgring.commitinterval=1000,1000,1000,1000


# montreal
#
# [size]: number of elements per list

montreal.size=10,30,100,300


